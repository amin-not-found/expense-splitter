const e=location.pathname.split("/").slice(0,-1).join("/"),r=[e+"/_app/immutable/entry/app.b2b10ee8.js",e+"/_app/immutable/assets/0.fb75186a.css",e+"/_app/immutable/nodes/0.57ba8dc3.js",e+"/_app/immutable/nodes/1.48635fda.js",e+"/_app/immutable/nodes/2.30beea2b.js",e+"/_app/immutable/assets/3.69c4089e.css",e+"/_app/immutable/nodes/3.24964f06.js",e+"/_app/immutable/assets/4.59cbfd55.css",e+"/_app/immutable/nodes/4.dcb93394.js",e+"/_app/immutable/assets/5.e552e149.css",e+"/_app/immutable/nodes/5.de236cb7.js",e+"/_app/immutable/assets/Loading.aa1c008f.css",e+"/_app/immutable/assets/Modal.e2c2d818.css",e+"/_app/immutable/assets/ModalController.c18533c9.css",e+"/_app/immutable/chunks/Loading.4d5898d3.js",e+"/_app/immutable/chunks/Modal.a14953a2.js",e+"/_app/immutable/chunks/ModalController.1bc59598.js",e+"/_app/immutable/chunks/index.737bebd0.js",e+"/_app/immutable/chunks/singletons.4caf7dee.js",e+"/_app/immutable/chunks/stores.d1fff28e.js",e+"/_app/immutable/entry/start.4b13c3f5.js"],l=[e+"/asset-generator/icon.svg",e+"/favicon.png",e+"/icon.svg",e+"/icons/icon-128x128.png",e+"/icons/icon-144x144.png",e+"/icons/icon-192x192.png",e+"/icons/icon-384x384.png",e+"/icons/icon-48x48.png",e+"/icons/icon-512x512.png",e+"/icons/icon-72x72.png",e+"/icons/icon-96x96.png",e+"/manifest_237170714c8996b2a9e23fac663a8e4c5b5305d26.zip",e+"/robots.txt",e+"/web-manifest.json"],m=[e+"/",e+"/app",e+"/app/event"],i="1723232098919",n=self,p=`cache-${i}`,u=r.concat(l).concat(m);n.addEventListener("install",s=>{console.log("[ServiceWorker] Install"),s.waitUntil(caches.open(p).then(a=>a.addAll(u)).then(()=>{n.skipWaiting()}))});n.addEventListener("activate",s=>{console.log("[ServiceWorker] Activate"),s.waitUntil(caches.keys().then(a=>Promise.all(a.map(t=>{if(t!==p)return console.log("[ServiceWorker] Removing old cache",t),caches.delete(t)})))),n.clients.claim()});n.addEventListener("fetch",s=>{if(s.request.method!=="GET"||s.request.headers.has("range"))return;const a=new URL(s.request.url);a.protocol.startsWith("http")&&(a.hostname===self.location.hostname&&a.port!==self.location.port||s.request.cache!=="only-if-cached"&&(console.log("[ServiceWorker] Fetch",s.request.url),s.respondWith(caches.open(`offline-${i}`).then(async t=>{try{const c=await fetch(s.request);return t.put(s.request,c.clone()),c}catch(c){const o=await t.match(s.request);if(o)return o;throw c}}))))});
